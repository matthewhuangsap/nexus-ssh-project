<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
           http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
           http://www.springframework.org/schema/context
           http://www.springframework.org/schema/context/spring-context-2.5.xsd
           http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.5.xsd
           http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.5.xsd">

	<!-- 
		<bean
		class="org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor" />
	-->

	<aop:aspectj-autoproxy />
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
		<!-- <property name="configLocation"
			value="classpath:hibernate.cfg.xml" /> -->
		<property name="configurationClass"
			value="org.hibernate.cfg.AnnotationConfiguration" />
		<property name="hibernateProperties" ref="hibernateProperties" />
		<!--
		<property name="packagesToScan" value="it.coolie.**.model"/>
		-->
		 
		<property name="packagesToScan">
			<list>
				<value>it.nexus.**.model</value>
				<value>it.nexus.system.**.model</value>
			</list>
		</property>
	</bean>
	<bean name="hibernateProperties"
		class="org.springframework.beans.factory.config.PropertiesFactoryBean">
		<property name="properties">
			<props>
				<prop key="hibernate.dialect">
					org.hibernate.dialect.SQLServerDialect
				</prop>
				<prop key="hibernate.connection.driver_class">
					net.sourceforge.jtds.jdbc.Driver
				</prop>
				<prop key="myeclipse.connection.profile">ms2005</prop>
				<prop key="hibernate.connection.url">
					jdbc:jtds:sqlserver://localhost:1433/mytest;instance=SQLEXPRESS
				</prop>
				<prop key="hibernate.connection.username">sa</prop>
				<prop key="hibernate.connection.password">qrqr</prop>
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.hbm2ddl.auto">update</prop>
				<prop key="hibernate.cache.provider_class">
					org.hibernate.cache.EhCacheProvider
				</prop>
				<prop key="hibernate.cache.use_query_cache">true</prop>
				<prop key="hibernate.default_batch_fetch_size">30</prop>
			</props>
		</property>
	</bean>
	<!-- 定义事务管理器（声明式的事务） -->
	<bean id="transactionManager"
		class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>

	<!--开启事务注解 -->
	<tx:annotation-driven transaction-manager="transactionManager"
		proxy-target-class="true" />
	<!--//给事务添加的属性 -->
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<!--//propagation表示的是事务的传播特性，使用required时，
				是当检测到add开头的方法时，就看此时有没有开启的事务，
				如果有则将方法放进事务中去，如果没有，则新建一个事务。然后将方法放进去。 -->
			<tx:method name="save*" propagation="REQUIRED" />
			<tx:method name="delete*" propagation="REQUIRED" />
			<tx:method name="update*" propagation="REQUIRED" />
			<!--//如果检测到其它的方法，则给其只读数据库的属性。即当本方法在读时，其它的方法不能再去写了。保证一个事务的完整性。 -->
			<tx:method name="*" read-only="true" />
		</tx:attributes>
	</tx:advice>


	<!-- 使Spring关注Annotation -->
	<context:annotation-config />
	<!-- 让Spring通过自动扫描来查询和管理Bean -->
	<context:component-scan base-package="it.nexus" />
	<context:component-scan base-package="net.psi" />

</beans>